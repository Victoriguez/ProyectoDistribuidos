version: '3.8' # Puedes quitar esta línea

services:
  storage: 
    image: mongo:6.0
    container_name: mongo-storage
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s  # <--- CORREGIDO
      retries: 5   # <--- CORREGIDO
    networks:
      - distribuidos_network

  cache: 
    # build: ./cache # Si tenías esto, coméntalo o asegúrate que tu Dockerfile base instale redis-tools
    image: redis:latest # <--- CAMBIO AQUÍ (o redis:7 si quieres una versión específica)
    container_name: redis_cache_service 
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data 
    healthcheck: 
      test: ["CMD", "redis-cli", "ping"] # Este healthcheck seguirá funcionando
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - distribuidos_network

  scraper:
    build: ./scraper
    container_name: scraper 
    depends_on:
      storage: 
        condition: service_healthy
    environment: 
      - MONGO_HOST=storage
      - MONGO_PORT=27017 # Separar variables de entorno
      - DB_NAME_SCRAPER=waze_db
      - COLLECTION_NAME_SCRAPER=eventos
      - SCRAPE_INTERVAL_SECONDS=300 
      - MAX_EVENTS_TO_COLLECT=450
    volumes:
      - ./scraper:/app
    networks:
      - distribuidos_network

  mongo_exporter:
    build: 
      context: ./mongo_exporter
      dockerfile: Dockerfile
    container_name: mongo_exporter_service
    depends_on:
      storage: 
        condition: service_healthy
      scraper: 
        condition: service_completed_successfully
    environment:
      - MONGO_HOST_EXPORTER=storage
      - DB_NAME_EXPORTER=waze_db # Separar variables
      - COLLECTION_NAME_EXPORTER=eventos
      - OUTPUT_TSV_PATH_EXPORTER=/exported_data/waze_events.tsv 
    volumes:
      - ./entrega2/pig_processing/data_input:/exported_data 
    networks:
      - distribuidos_network

  pig_processor:
    build: 
      context: ./entrega2/pig_processing
      dockerfile: Dockerfile.pig 
    container_name: pig_service_container
    volumes:
      - ./entrega2/pig_processing/scripts:/pig_scripts
      - ./entrega2/pig_processing/data_input:/pig_input_data 
      - ./entrega2/pig_processing/data_output:/pig_output_data 
    command: ["pig", "-x", "local", "-f", "/pig_scripts/process_waze_data.pig"]
    networks:
      - distribuidos_network
    depends_on:
      mongo_exporter: 
        condition: service_completed_successfully

  cache_loader:
    build: 
      context: ./cache_loader
      dockerfile: Dockerfile
    container_name: cache_loader_service
    depends_on:
      pig_processor: 
        condition: service_completed_successfully
      cache: 
        condition: service_healthy
    environment:
      - REDIS_HOST_LOADER=cache 
      - PIG_OUTPUT_BASE_DIR=/pig_results_input
    volumes:
      - ./entrega2/pig_processing/data_output:/pig_results_input 
    networks:
      - distribuidos_network

volumes:
  mongo_data:
  redis_data:

networks:
  distribuidos_network: 
    driver: bridge